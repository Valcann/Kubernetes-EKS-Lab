apiVersion: v1
kind: ConfigMap
metadata:
  name: loki
  namespace: monitoring
data:
  local-config.yaml: |
    auth_enabled: false
​
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
​
    common:
      path_prefix: /data/loki
      storage:
        filesystem:
          chunks_directory: /data/loki/chunks
          rules_directory: /data/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
​
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
​
    ruler:
      alertmanager_url: http://grafana.monitoring.svc.cluster.local:9093
​
    # By default, Loki will send anonymous, but uniquely-identifiable usage and configuration
    # analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/
    #
    # Statistics help us better understand how Loki is used, and they show us performance
    # levels for most users. This helps us prioritize features and documentation.
    # For more information on what's sent, look at
    # https://github.com/grafana/loki/blob/main/pkg/usagestats/stats.go
    # Refer to the buildReport method to see what goes into a report.
    #
    # If you would like to disable reporting, uncomment the following lines:
    analytics:
      reporting_enabled: false
#Add Storage Class for Persistent Volume Claim
--- 
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata: 
  name: standard
provisioner: ebs.csi.aws.com
#reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki
  namespace: monitoring
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
spec:
  revisionHistoryLimit: 2
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: loki
      component: loki
      tier: logging
  template:
    metadata:
      labels:
        app: loki
        component: loki
        tier: logging
    spec:
      automountServiceAccountToken: false
      # runtimeClassName: kata
      securityContext:
        runAsUser: 10001
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
      containers:
        - name: loki
          # 2.5.0 as of 2022/04/11
          image: grafana/loki:main
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3100
            - containerPort: 9096
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 2Gi
          # Probes
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3100
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 3100
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /etc/loki/local-config.yaml
              subPath: local-config.yaml
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: loki
        - name: data
          persistentVolumeClaim:
            claimName: loki
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
spec:
  selector:
    app: loki
    component: loki
    tier: logging
  ports:
  - name: http
    port: 3100
  - name: grpc
    port: 9096